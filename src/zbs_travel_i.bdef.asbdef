managed implementation in class zbp_bs_travel_i unique;
strict ( 2 );
with draft;
define behavior for zbs_travel_i alias Travel
draft table zbs_travel_d
persistent table zbs_travel
lock master
total etag LastChangedAt
authorization master ( global,instance )
etag master LocalLastChangedAt
{
  create ( authorization : global );
  update;
  delete;
  field ( readonly ) TravelUuid;
  field(numbering : managed)TravelUuid;
  association _Booking { create;with draft; }
  draft action Edit;
  draft action Discard;
  draft action Resume;
  draft action Activate optimized;
  draft determine action Prepare;
  mapping for zbs_travel
  {

  TravelUuid    = travel_uuid ;
TravelId    = travel_id ;
AgencyId     = agency_id ;
CustomerId =    customer_id ;
BeginDate = begin_date ;
EndDate =   end_date ;
BookingFee =    booking_fee ;
TotalPrice =    total_price ;
CurrencyCode =  currency_code ;
Description =   description ;
OverallStatus = overall_status ;
CreatedBy = created_by ;
CreatedAt = created_at ;
LocalLastChangedBy = local_last_changed_by ;
LocalLastChangedAt = local_last_changed_at ;
LastChangedAt = last_changed_at;
  }
}

define behavior for zbs_booking_i alias Booking
draft table zbs_booking_d
persistent table zbs_booking
lock dependent by _Travel
authorization dependent by _Travel
etag master LastChangedAt
{
  update;
  delete;
  field(numbering : managed)BookingUuid;
  field ( readonly ) BookingUuid,TravelUuid;
  association _Travel{with draft ;}
  association _Bookingsupplements { create; with draft;}
  mapping for zbs_booking
  {BookingUuid =    booking_uuid;
TravelUuid =    parent_uuid;
BookingId = booking_id;
BookingDate =   booking_date;
CustomerId =    customer_id;
CarrierId = carrier_id;
ConnectionId =  connection_id;
FlightDate = flight_date;
FlightPrice =   flight_price;
CurrencyCode = currency_code;
BookingStatus = booking_status;
LastChangedAt = last_changed_at;
  }
}

define behavior for ZBS_BOOKING_SUPL_i alias Bookingsupplement
draft table zbs_booking_supd
persistent table zbs_booking_supl
lock dependent by _Travel
authorization dependent by _Travel
etag master LastChangedAt
{
  update;
  delete;
  field(numbering : managed)BooksupplUuid;
  field ( readonly ) RootUuid,BooksupplUuid,ParentUuid;
  association _Travel{with draft ;}
  association _Booking{with draft ;}
  mapping for zbs_booking_supl
  { BooksupplUuid =  booksuppl_uuid;
RootUuid =  root_uuid;
ParentUuid =    parent_uuid;
BookingSupplementId =   booking_supplement_id;
SupplementId = supplement_id;
Price = price;
CurrencyCode =  currency_code;
LastChangedAt = last_changed_at;
  }
}